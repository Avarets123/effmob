openapi: 3.0.3
servers:
  - url: http://localhost:3015/
info:
  title: Music info
  version: 0.0.1
paths:
  /info:
    get:
      tags:
        - info
      parameters:
        - name: group
          in: query
          required: true
          schema:
            type: string
        - name: song
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongDetail'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /songs:
    post:
      tags:
        - songs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongModel'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: string
                example: 7bfe981a-4d26-42c0-a8f1-4f3e351b08e8
    get:
      tags:
        - songs
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: sortField
          schema:
            type: string
            default: created_at
        - in: query
          name: sortDir
          schema:
            type: string
            enum:
              - ASD
              - DESC
            default: DESC
        - in: query
          name: filterField
          schema:
            type: string
        - in: query
          name: filterValue
          schema:
            type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: 
                      $ref: '#/components/schemas/SongModel'
                allOf:
                  - $ref: '#components/schemas/Listing'
  /songs/{songId}/:
    get:
      tags:
        - songs
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongModel'
    patch:
      tags:
        - songs
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongModel'
      responses:
        204:
          description: no-content
    delete:
      tags:
        - songs
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
      responses:
        204:
          description: no-content
  /songs/{songId}/couplets:
    patch:
      description: Добавление куплетов для песни
      tags:
        - couplets
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                couplets:
                  type:  array
                  items:
                    type: string
      responses:
        201:
          description: created
    put:
      description: Удаляет и перезаписывает куплеты песни
      tags:
        - couplets
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                couplets:
                  type:  array
                  items:
                    type: string
      responses:
        201:
          description: created
    delete:
      description: Удаление куплетов (если массив пустой удаляет всех куплетов)
      tags:
        - couplets
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coupletsIds:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        204:
          description: no-content

    get:
      description: Листинг куплетов для указанной песни
      tags:
        - couplets
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: string
            example: 13284232-6f12-4f31-8760-6e89895f71a5
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: 
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        coupletNum:
                          type: integer
                          default: 1
                        couplet:
                          type: string
                          example: У лукоморя дуб зеленый
                allOf:
                  - $ref: '#components/schemas/Listing'
    



            
          
    

          
            
      
components:
  schemas:
    Listing:
      type: object
      properties:
        total:
          type: integer
          example: 26
        offset: 
          type: integer
          example: 0
        limit:
          type: integer
          example: 0
    SongModel:
      required:
        - group
        - song
      type: object
      properties:
        group:
          description: Название группы
          type: string
          example: BestGroup
          readOnly: false
        song:
          description: Название песни
          type:  string
          example: Song number one
          readOnly: false
        link:
          type: string
          example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
          readOnly: false
        releaseDate:
          description: Дата выпуска песни
          type: string
          format: date
          example: '2024-11-22'
          readOnly: false
        createdAt:
          type: string
          format: date
          example: '2024-11-22 19:22:47.918'
          readOnly: true
        updatedAt:
          type:  string
          format: date
          example: '2024-11-22 19:22:47.918'
          readOnly: true
        text:
          description: Текст песни
          type:  string
          readOnly: true
          example: Ooh baby, don't you know I suffer?\nOoh baby, can you hear me moan?\nYou caught me under false pretenses\nHow long before you let me go?\n\nOoh\nYou set my soul alight\nOoh\nYou set my soul alight
    SongDetail:
      required:
        - releaseDate
        - text
        - link
      type: object
      properties:
        releaseDate:
          type: string
          example: 16.07.2006
        text:
          type: string
          example: Ooh baby, don't you know I suffer?\nOoh baby, can you hear me moan?\nYou caught me under false pretenses\nHow long before you let me go?\n\nOoh\nYou set my soul alight\nOoh\nYou set my soul alight
        link:
          type: string
          example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
